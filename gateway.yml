server:
  port: 8000
spring:
  # redis:
  #   host: ${REDIS_HOST:localhost}
  #   port: ${REDIS_PORT:6379}
    
  application:
    name: gateway
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS:localhost:9092}
  cloud:
    # kubernetes:
    #   discovery:
    #     enabled: true
    #     all-namespaces: false
    bus:  
      enabled: true
    gateway:
      # default-filters:
      #   # Circuit Breaker
      #   - name: CircuitBreaker
      #     args:
      #       name: globalCB
      #       fallbackUri: forward:/fallback/global

      #   # Rate Limiter (Redis)
      #   - name: RequestRateLimiter
      #     args:
      #       key-resolver: "#{@ipKeyResolver}"
      #       redis-rate-limiter.replenishRate: 5      # 5 request/giây
      #       redis-rate-limiter.burstCapacity: 10     # tối đa 10 request dồn

      #   # Retry filter
      #   - name: Retry
      #     args:
      #       retries: 2
      #       statuses: BAD_GATEWAY, GATEWAY_TIMEOUT, INTERNAL_SERVER_ERROR
      #       methods: GET, POST
      #       backoff:
      #         firstBackoff: 50ms
      #         maxBackoff: 500ms
      #         factor: 2
      #         basedOnPreviousValue: true
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      globalcors:
        corsConfigurations:
          '[/**]': # CORS cho tất cả các route
            allowedOrigins: ${FE_URL:http://localhost:3000} # Địa chỉ frontend React
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            
      routes:
        - id: user-service
          uri: lb://USER
          predicates:
            - Path=/user/**,/USER/**
          filters:
            - StripPrefix=1
            - name: AddSubHeader
          order: -1
        - id: cart-service
          uri: lb://CART
          predicates:
            - Path=/cart/carts,/CART/carts,/cart/carts/create,/CART/carts/create
          filters:
            - StripPrefix=1
            - name: AddSubHeader
          order: -1

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${RESOURCESERVER_JWT_ISSUSERURI:http://localhost:8080/realms/myrealm}
          
eureka:
  client:
    register-with-eureka: true   # Cho phép đăng ký với Eureka
    fetch-registry: true         # Lấy danh sách các service khác
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}

management:
  endpoints:
    web:
      exposure:
        include: health, info, refresh, busrefresh
